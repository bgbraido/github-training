name: 08 - Using Variables

on:
  push:
  workflow_dispatch:

env:
  WORKFLOW_VAR: "I am a workflow env var"
  OVERWRITE: "I will be overwritten"
  UNDERFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'defatul value' }}
jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: "I am a job env var"
      OVERWRITE: "I have been overwritten at job level"
    steps:
      - name: Print Env Variables
        env:
          STEP_VAR: "I am a step env var"
          step_var2: "I am another step env var"
        run: |
          echo "Step env var: ${{ env.STEP_VAR }}"
          echo "Step env var 2: $step_var2"
          echo "Job env var: ${{ env.JOB_VAR }}"
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwritten env var: ${{ env.OVERWRITE }}"
      - name: Overwrite Env Variable
        env:
          OVERWRITE: "I have been overwritten at the step level"
        run: |
          echo "Overwritten env var: ${{ env.OVERWRITE }}"

  echo2:
    runs-on: ubuntu-latest
    steps:
      - name: Print Variables
        run: |
          # echo "Org var: ${{ vars.ORG_VAR }}"
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
  echo-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Print Prod Variables
        run: |
          echo "This job runs in the prod environment"
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
          echo "Enrivonment var: ${{ vars.TARGET_VAR }}"

  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      - name: Print Undefined Variables
        run: |
          echo "Org var: ${{ env.UNDERFINED_VAR_WITH_DEFAULT }}"
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
